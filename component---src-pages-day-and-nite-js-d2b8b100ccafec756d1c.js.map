{"version":3,"file":"component---src-pages-day-and-nite-js-d2b8b100ccafec756d1c.js","mappings":"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","sources":["webpack://william-cougan/./src/pages/DayAndNite.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nfunction useHour(initialHour = 0) {\n\tconst [hour, setHour] = useState(initialHour);\n\n\tuseEffect(() => {\n\t\tconst intervalId = setInterval(() => {\n\t\t\tsetHour((hour) => (hour + 0.1) % 24);\n\t\t}, 100);\n\n\t\treturn () => clearInterval(intervalId);\n\t}, []);\n\n\treturn hour;\n}\n\nconst Container = styled.div`\n\twidth: 100vw;\n\theight: 100vh;\n\toverflow: hidden;\n`;\n\nconst Landscape = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tposition: relative;\n`;\n\nconst Sky = styled.div.attrs((props) => {\n\tconst backgroundColor = (() => {\n\t\tconst ratio = props.hour / 12;\n\t\tconst red = Math.round(ratio * 0);\n\t\tconst green = Math.round(ratio * 160);\n\t\tconst blue = Math.round(ratio * 255);\n\t\tif (props.hour > 12) {\n\t\t\tconst invertedRatio = (23 - props.hour) / 11;\n\t\t\tconst invertedRed = Math.round(invertedRatio * 0);\n\t\t\tconst invertedGreen = Math.round(invertedRatio * 160);\n\t\t\tconst invertedBlue = Math.round(invertedRatio * 255);\n\t\t\treturn `rgb(${invertedRed}, ${invertedGreen}, ${invertedBlue})`;\n\t\t}\n\t\treturn `rgb(${red}, ${green}, ${blue})`;\n\t})();\n\treturn {\n\t\tstyle: {\n\t\t\tbackgroundColor,\n\t\t},\n\t};\n})`\n\twidth: 100%;\n\theight: 100%;\n\tposition: relative;\n\ttransition: background-color 0.5s ease-in-out;\n`;\n\nconst Star = styled.div.attrs((props) => {\n\treturn {\n\t\tstyle: {\n\t\t\ttop: `${props.top}%`,\n\t\t\tleft: `${props.left}%`,\n\t\t\topacity: props.opacity,\n\t\t},\n\t};\n})`\n\twidth: 3px;\n\theight: 3px;\n\tborder-radius: 50%;\n\tbackground-color: #f5f5f5;\n\tposition: absolute;\n\tz-index: 1;\n`;\n\nconst CelestialBody = styled.div.attrs((props) => {\n\tconst bottom = bottomPosition(props.hour, props.type);\n\tconst left = leftPosition(props.hour, props.type);\n\tconst backgroundGradient = props.type === 'sun' ? '#ffdb58' : '#f5f5f5';\n\treturn {\n\t\tstyle: {\n\t\t\tbottom,\n\t\t\tleft,\n\t\t\tbackground: `linear-gradient(to bottom, #f5f5f5, ${backgroundGradient})`,\n\t\t},\n\t};\n})`\n\twidth: 150px;\n\theight: 150px;\n\tborder-radius: 50%;\n\tposition: absolute;\n\tz-index: 2;\n\tbox-shadow: 0px 0px 50px 20px #f5f5f5;\n`;\n\nfunction bottomPosition(hour, celestialBody) {\n\tconst height = typeof window !== 'undefined' ? window.innerHeight : 0;\n\tconst centerY = height / 2 + 450;\n\tconst radiusY = height / 2 + 300;\n\tconst oppositeHour = celestialBody === 'sun' ? (hour + 12) % 24 : hour;\n\tconst angle = ((21 - oppositeHour) * Math.PI) / 12;\n\tconst y = centerY + radiusY * Math.sin(angle);\n\tconst invertedY = height - y;\n\treturn `${invertedY}px`;\n}\n\nfunction leftPosition(hour, celestialBody) {\n\tconst width = typeof window !== 'undefined' ? window.innerWidth : 0;\n\tconst centerX = width / 2 - 75;\n\tconst radiusX = width / 2 + 150;\n\tconst oppositeHour = celestialBody === 'sun' ? (hour + 12) % 24 : hour;\n\tconst angle = ((oppositeHour + 15) * Math.PI) / 12;\n\tconst x = centerX + radiusX * Math.cos(angle);\n\treturn `${x}px`;\n}\n\nconst Stars = ({ hour }) => {\n\tconst [opacity, setOpacity] = useState(1);\n\tuseEffect(() => {\n\t\tif (hour >= 0 && hour < 12) {\n\t\t\tsetOpacity(1 - hour / 12);\n\t\t} else {\n\t\t\tsetOpacity((hour - 12) / 11);\n\t\t}\n\t}, [hour]);\n\tconst starPositions = [\n\t\t{ top: 15, left: 10 },\n\t\t{ top: 25, left: 20 },\n\t\t{ top: 10, left: 40 },\n\t\t{ top: 30, left: 60 },\n\t\t{ top: 20, left: 70 },\n\t\t{ top: 5, left: 90 },\n\t\t{ top: 35, left: 95 },\n\t\t{ top: 25, left: 55 },\n\t\t{ top: 15, left: 80 },\n\t\t{ top: 10, left: 30 },\n\t\t{ top: 20, left: 50 },\n\t\t{ top: 5, left: 65 },\n\t];\n\treturn starPositions.map((position, index) => (\n\t\t<Star key={index} top={position.top} left={position.left} opacity={opacity} />\n\t));\n};\n\nconst DayAndNite = () => {\n\tconst hour = useHour();\n\n\treturn (\n\t\t<Container>\n\t\t\t<Landscape>\n\t\t\t\t<Sky hour={hour}>\n\t\t\t\t\t<CelestialBody type='sun' hour={hour} />\n\t\t\t\t\t<CelestialBody type='moon' hour={hour} />\n\t\t\t\t\t<Stars hour={hour} />\n\t\t\t\t</Sky>\n\t\t\t</Landscape>\n\t\t</Container>\n\t);\n};\n\nexport default DayAndNite;\n"],"names":["Container","styled","Landscape","Sky","props","style","backgroundColor","ratio","hour","red","Math","round","green","blue","invertedRatio","Star","top","left","opacity","CelestialBody","bottom","celestialBody","height","window","innerHeight","centerY","radiusY","angle","PI","y","sin","bottomPosition","type","width","innerWidth","centerX","radiusX","cos","leftPosition","background","Stars","setOpacity","useState","useEffect","map","position","index","key","initialHour","setHour","intervalId","setInterval","clearInterval","useHour"],"sourceRoot":""}